{"version":3,"sources":["apollo/apollo-setup.tsx","apollo/create-apollo-client.tsx","app-title.tsx","config.ts","authentication/authentication-page.tsx","authentication/loading-auth-data.tsx","authentication/verify-user-authenticated.ts","authentication/actions.ts","authentication/authentication-verifier.tsx","authentication/exchange-code-for-access-token.ts","authentication/auth-checker.tsx","review-stats/inputs.tsx","review-stats/color-palette.ts","review-stats/charts.tsx","review-stats/metrics/index.ts","review-stats/metrics/total-comments.ts","review-stats/metrics/prs-interacted-with.ts","review-stats/metrics/lines-of-code-reviewed.ts","review-stats/metrics/files-reviewed.ts","review-stats/metric-picker-with-charts.tsx","review-stats/transform-pull-requests.ts","review-stats/query-repository.tsx","review-stats/review-stats.tsx","store.ts","authentication/reducer.ts","user-info-bar/get-user-profile-url.ts","user-info-bar/user-info-bar.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ConnectedApolloSetup","connect","_ref2","accessToken","authentication","ApolloSetup","_ref","children","Error","concat","displayName","apolloClient","useMemo","ApolloClient","uri","headers","Authorization","createApolloClient","react_default","a","createElement","react_apollo_browser_umd","client","StyledAppTitle","withStyles","theme","header","marginBottom","spacing","unit","textAlign","classes","index_es","variant","className","config","process","getGithubAuthenticationUrl","redirectUrl","window","location","href","queryParams","join","ConnectedAuthenticationPage","state","isLoading","hasError","main","Object","defineProperty","width","display","marginLeft","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","loadingWrapper","gutterBottom","color","StyledLoadingAuthData","wrapper","size","verifyUserAuthenticated","asyncToGenerator","regenerator_default","mark","_callee","dispatch","fetch","response","isAuthenticated","body","wrap","_context","prev","next","method","sent","status","json","type","login","abrupt","stop","this","_x","_x2","_x3","apply","arguments","AuthenticationVerifier","props","_useState","useState","_useState2","slicedToArray","initialized","setInitialized","useEffect","then","Fragment","exchangeCodeForAccessToken","code","JSON","stringify","Content-Type","mode","access_token","console","error","t0","AuthChecker","hasInitialized","url","URL","searchParams","has","get","history","replaceState","document","title","pathname","setState","_this$props","authentication_verifier_AuthenticationVerifier","Component","ConnectedAuthChecker","store","StyledInputs","input","withMarginRight","onQuery","repository","setRepository","_useState3","subDays","Date","_useState4","fromDate","setFromDate","_useState5","_useState6","toDate","setToDate","onQueryButtonClick","useCallback","label","value","onChange","event","target","fullWidth","InputProps","startAdornment","position","material_ui_pickers_esm","disableFuture","onClick","colorPalette","StyledCharts","_","chartsWrapper","overflow","reviews","ResponsiveContainer","aspect","PieChart","Pie","data","nameKey","dataKey","labelLine","map","index","Cell","fill","length","key","Tooltip","BarChart","slice","CartesianGrid","XAxis","YAxis","Bar","metrics","totalComments","pullRequests","reviewsMap","forEach","pr","nodes","filter","review","author","comments","totalCount","prsInteractedWith","involvedUsers","Set","add","delete","user","linesOfCodeReviewed","additions","deletions","filesReviewed","changedFiles","MetricPickerWithCharts","metricKind","setMetricKind","reviewMetric","entries","name","count","sort","b","transformPullRequests","onMetricSelectChange","style","htmlFor","Select_default","inputProps","id","GET_REPOSITORY_INFO_QUERY","gql","_templateObject","QueryRepository","queryData","queryVariables","firstPrs","firstReviews","query","createSearchQueryString","variables","loading","metric_picker_with_charts_MetricPickerWithCharts","search","formatGitHubDateTime","date","format","StyledReviewStats","withMarginLeft","setQueryData","query_repository_QueryRepository","reducer","combineReducers","storage","defaultState","getItem","undefined","action","setItem","objectSpread","removeItem","authenticationReducerFactory","localStorage","createStore","__REDUX_DEVTOOLS_EXTENSION__","getUserProfileUrl","ConnectedUserInfoBar","signOutButton","signOut","container","item","xs","App","utils","DateFnsUtils","es","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","src_App","getElementById","toString","origin","addEventListener","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.edcbc2a3.chunk.js","sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { connect, MapStateToProps } from 'react-redux';\r\n\r\nimport { StoreState } from '../store';\r\nimport { createApolloClient } from './create-apollo-client';\r\n\r\ninterface StateProps {\r\n  accessToken?: string;\r\n}\r\n\r\nconst ApolloSetup: FunctionComponent<StateProps> = ({\r\n  accessToken,\r\n  children,\r\n}) => {\r\n  if (!accessToken) {\r\n    throw new Error(\r\n      `${\r\n        ApolloSetup.displayName\r\n      } should be rendered only if the user is logged in.`,\r\n    );\r\n  }\r\n\r\n  const apolloClient = useMemo(() => createApolloClient(accessToken), [\r\n    accessToken,\r\n  ]);\r\n\r\n  return <ApolloProvider client={apolloClient}>{children}</ApolloProvider>;\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<StateProps, {}, StoreState> = ({\r\n  authentication,\r\n}) => ({\r\n  accessToken: authentication.accessToken,\r\n});\r\n\r\nconst ConnectedApolloSetup = connect(mapStateToProps)(ApolloSetup);\r\nexport { ConnectedApolloSetup as ApolloSetup };\r\n","import ApolloClient from 'apollo-boost';\r\n\r\nexport function createApolloClient(accessToken: string) {\r\n  return new ApolloClient({\r\n    uri: 'https://api.github.com/graphql',\r\n    headers: {\r\n      Authorization: `token ${accessToken}`,\r\n    },\r\n  });\r\n}\r\n","import {\r\n  StyleRulesCallback,\r\n  Typography,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nconst styles: StyleRulesCallback<'header'> = (theme) => ({\r\n  header: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nconst AppTitle: FunctionComponent<WithStyles<typeof styles>> = ({\r\n  classes,\r\n}) => (\r\n  <Typography variant=\"h4\" className={classes.header}>\r\n    GitHub Review Stats\r\n  </Typography>\r\n);\r\n\r\nconst StyledAppTitle = withStyles(styles)(AppTitle);\r\nexport { StyledAppTitle as AppTitle };\r\n","const azureAccessTokenFunctionUrl =\r\n  process.env.REACT_APP_AZURE_ACCESS_TOKEN_FUNCTION_URL;\r\n\r\nif (!azureAccessTokenFunctionUrl) {\r\n  console.error(\r\n    'REACT_APP_AZURE_ACCESS_TOKEN_FUNCTION_URL environment variable is not set.',\r\n  );\r\n}\r\n\r\nconst githubClientID = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n\r\nif (!githubClientID) {\r\n  console.error('REACT_APP_GITHUB_CLIENT_ID environment variable is not set.');\r\n}\r\n\r\nexport const config = {\r\n  githubClientID: githubClientID as string,\r\n  azureAccessTokenFunctionUrl: azureAccessTokenFunctionUrl as string,\r\n};\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Typography,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core';\r\nimport React, { StatelessComponent } from 'react';\r\nimport { connect, MapStateToProps } from 'react-redux';\r\n\r\nimport { AppTitle } from '../app-title';\r\nimport { config } from '../config';\r\nimport { StoreState } from '../store';\r\n\r\nconst styles: StyleRulesCallback<'main' | 'paper' | 'loadingWrapper'> = (\r\n  theme,\r\n) => ({\r\n  main: {\r\n    width: 'auto',\r\n\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`,\r\n  },\r\n  loadingWrapper: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface AuthenticationPageStateProps {\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n}\r\n\r\ntype AuthenticationPageProps = WithStyles<typeof styles> &\r\n  AuthenticationPageStateProps;\r\n\r\nconst AuthenticationPage: StatelessComponent<AuthenticationPageProps> = ({\r\n  classes,\r\n  isLoading,\r\n  hasError,\r\n}) => {\r\n  return (\r\n    <main className={classes.main}>\r\n      <Paper className={classes.paper}>\r\n        <AppTitle />\r\n\r\n        {isLoading && (\r\n          <div className={classes.loadingWrapper}>\r\n            <Typography gutterBottom={true}>Signing in...</Typography>\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n\r\n        {hasError && (\r\n          <Typography gutterBottom={true} color=\"error\">\r\n            An error occurred while signing in. Please try again.\r\n          </Typography>\r\n        )}\r\n\r\n        {!isLoading && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            href={getGithubAuthenticationUrl()}\r\n          >\r\n            Sign up with GitHub\r\n          </Button>\r\n        )}\r\n      </Paper>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst getGithubAuthenticationUrl = () => {\r\n  const redirectUrl = window.location.href;\r\n  const queryParams = [\r\n    `client_id=${config.githubClientID}`,\r\n    `redirect_uri=${redirectUrl}`,\r\n    'scope=repo',\r\n  ].join('&');\r\n\r\n  return `https://github.com/login/oauth/authorize?${queryParams}`;\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n  AuthenticationPageStateProps,\r\n  {},\r\n  StoreState\r\n> = (state) => ({\r\n  isLoading: state.authentication.isLoading,\r\n  hasError: state.authentication.hasError,\r\n});\r\n\r\nconst ConnectedAuthenticationPage = connect(mapStateToProps)(\r\n  withStyles(styles)(AuthenticationPage),\r\n);\r\nexport { ConnectedAuthenticationPage as AuthenticationPage };\r\n","import { CircularProgress, withStyles } from '@material-ui/core';\r\nimport { StyleRules, WithStyles } from '@material-ui/core/styles';\r\nimport React, { StatelessComponent } from 'react';\r\n\r\nconst styles: StyleRules<'wrapper'> = {\r\n  wrapper: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n  },\r\n};\r\n\r\nconst LoadingAuthData: StatelessComponent<WithStyles<typeof styles>> = ({\r\n  classes,\r\n}) => {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <CircularProgress size={50} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledLoadingAuthData = withStyles(styles)(LoadingAuthData);\r\nexport { StyledLoadingAuthData as LoadingAuthData };\r\n","import { Dispatch } from 'redux';\r\n\r\nimport {\r\n  AuthenticationAction,\r\n  authenticationLogin,\r\n  authenticationLogout,\r\n} from './actions';\r\n\r\nexport const verifyUserAuthenticated = async (\r\n  dispatch: Dispatch<AuthenticationAction>,\r\n  fetch: typeof window.fetch,\r\n  accessToken: string,\r\n) => {\r\n  const response = await fetch('https://api.github.com/user', {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: `token ${accessToken}`,\r\n    },\r\n  });\r\n\r\n  const isAuthenticated = response.status === 200;\r\n\r\n  if (isAuthenticated) {\r\n    const body = await response.json();\r\n    dispatch(authenticationLogin(body.login));\r\n  } else {\r\n    dispatch(authenticationLogout());\r\n  }\r\n\r\n  return isAuthenticated;\r\n};\r\n","import { Action } from 'redux';\r\n\r\nexport type AuthenticationStartedAction = Action<'AUTHENTICATION_STARTED'>;\r\n\r\nexport const authenticationStarted = (): AuthenticationStartedAction => ({\r\n  type: 'AUTHENTICATION_STARTED',\r\n});\r\n\r\nexport interface AuthenticationSuccessAction\r\n  extends Action<'AUTHENTICATION_SUCCESS'> {\r\n  accessToken: string;\r\n}\r\n\r\nexport const authenticationSuccess = (\r\n  accessToken: string,\r\n): AuthenticationSuccessAction => ({\r\n  accessToken,\r\n  type: 'AUTHENTICATION_SUCCESS',\r\n});\r\n\r\nexport type AuthenticationErrorAction = Action<'AUTHENTICATION_ERROR'>;\r\n\r\nexport const authenticationError = (): AuthenticationErrorAction => ({\r\n  type: 'AUTHENTICATION_ERROR',\r\n});\r\n\r\nexport type AuthenticationLogoutAction = Action<'AUTHENTICATION_LOGOUT'>;\r\n\r\nexport const authenticationLogout = (): AuthenticationLogoutAction => ({\r\n  type: 'AUTHENTICATION_LOGOUT',\r\n});\r\n\r\nexport type AuthenticationLoginAction = Action<'AUTHENTICATION_LOGIN'> & {\r\n  login: string;\r\n};\r\n\r\nexport const authenticationLogin = (\r\n  login: string,\r\n): AuthenticationLoginAction => ({\r\n  type: 'AUTHENTICATION_LOGIN',\r\n  login,\r\n});\r\n\r\nexport type AuthenticationAction =\r\n  | AuthenticationSuccessAction\r\n  | AuthenticationErrorAction\r\n  | AuthenticationStartedAction\r\n  | AuthenticationLogoutAction\r\n  | AuthenticationLoginAction;\r\n","import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { LoadingAuthData } from './loading-auth-data';\r\nimport { verifyUserAuthenticated } from './verify-user-authenticated';\r\n\r\ninterface AuthenticationVerifierProps {\r\n  accessToken: string;\r\n  dispatch: Dispatch;\r\n}\r\n\r\nexport const AuthenticationVerifier: FunctionComponent<\r\n  AuthenticationVerifierProps\r\n> = (props) => {\r\n  const [initialized, setInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setInitialized(false);\r\n\r\n    verifyUserAuthenticated(props.dispatch, fetch, props.accessToken).then(() =>\r\n      setInitialized(true),\r\n    );\r\n  }, [props.accessToken]);\r\n\r\n  if (initialized) {\r\n    return <>{props.children}</>;\r\n  }\r\n\r\n  return <LoadingAuthData />;\r\n};\r\n","import { Dispatch } from 'redux';\n\nimport { config } from '../config';\nimport {\n  AuthenticationAction,\n  authenticationError,\n  authenticationStarted,\n  authenticationSuccess,\n} from './actions';\n\nexport const exchangeCodeForAccessToken = async (\n  dispatch: Dispatch<AuthenticationAction>,\n  fetch: typeof window.fetch,\n  code: string,\n) => {\n  dispatch(authenticationStarted());\n\n  try {\n    const response = await fetch(config.azureAccessTokenFunctionUrl, {\n      method: 'POST',\n      body: JSON.stringify({\n        code,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n    });\n\n    const body = await response.json();\n    if (!body.access_token) {\n      console.error(\n        'Could not sign in via an Azure function. Payload received',\n        body,\n      );\n      throw new Error('Could not sign in');\n    }\n\n    dispatch(authenticationSuccess(body.access_token));\n  } catch (error) {\n    dispatch(authenticationError());\n  }\n};\n","import React, { Component } from 'react';\r\nimport { connect, DispatchProp, MapStateToProps } from 'react-redux';\r\n\r\nimport { StoreState } from '../store';\r\nimport { AuthenticationPage } from './authentication-page';\r\nimport { AuthenticationVerifier } from './authentication-verifier';\r\nimport { exchangeCodeForAccessToken } from './exchange-code-for-access-token';\r\nimport { LoadingAuthData } from './loading-auth-data';\r\n\r\ninterface StoreProps {\r\n  accessToken?: string;\r\n}\r\n\r\ntype AuthCheckerProps = StoreProps & DispatchProp;\r\n\r\ninterface AuthCheckerState {\r\n  hasInitialized: boolean;\r\n}\r\n\r\nclass AuthChecker extends Component<AuthCheckerProps, AuthCheckerState> {\r\n  public state: AuthCheckerState = {\r\n    hasInitialized: false,\r\n  };\r\n\r\n  public async componentDidMount() {\r\n    const url = new URL(window.location.href);\r\n\r\n    if (url.searchParams.has('code')) {\r\n      const code = url.searchParams.get('code') as string;\r\n      window.history.replaceState(\r\n        null,\r\n        document.title,\r\n        window.location.pathname,\r\n      );\r\n\r\n      exchangeCodeForAccessToken(this.props.dispatch, fetch, code);\r\n    }\r\n\r\n    this.setState({\r\n      hasInitialized: true,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const { children, accessToken, dispatch } = this.props;\r\n    const { hasInitialized } = this.state;\r\n\r\n    if (!hasInitialized) {\r\n      return <LoadingAuthData />;\r\n    }\r\n\r\n    if (!accessToken) {\r\n      return <AuthenticationPage />;\r\n    }\r\n\r\n    return (\r\n      <AuthenticationVerifier accessToken={accessToken} dispatch={dispatch}>\r\n        {children}\r\n      </AuthenticationVerifier>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<StoreProps, {}, StoreState> = (\r\n  store,\r\n) => ({\r\n  accessToken: store.authentication.accessToken,\r\n});\r\n\r\nconst ConnectedAuthChecker = connect(mapStateToProps)(AuthChecker);\r\n\r\nexport { ConnectedAuthChecker as AuthChecker };\r\n","import {\r\n  Button,\r\n  InputAdornment,\r\n  StyleRulesCallback,\r\n  TextField,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { TextFieldProps } from '@material-ui/core/TextField';\r\nimport { subDays } from 'date-fns/esm';\r\nimport { DateTimePicker } from 'material-ui-pickers';\r\nimport React, { FunctionComponent, useCallback, useState } from 'react';\r\n\r\nimport { ReviewStatsInputs } from './interfaces';\r\n\r\nconst styles: StyleRulesCallback<'input' | 'withMarginRight'> = (theme) => ({\r\n  input: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  withMarginRight: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n});\r\n\r\ninterface InputsProps {\r\n  onQuery: (inputs: ReviewStatsInputs) => void;\r\n}\r\n\r\nconst Inputs: FunctionComponent<WithStyles<typeof styles> & InputsProps> = ({\r\n  classes,\r\n  onQuery,\r\n}) => {\r\n  const [repository, setRepository] = useState('Facebook/react');\r\n  const onRepositoryInputChange: NonNullable<TextFieldProps['onChange']> = (\r\n    event,\r\n  ) => {\r\n    setRepository(event.target.value);\r\n  };\r\n\r\n  const [fromDate, setFromDate] = useState(subDays(new Date(), 7));\r\n  const [toDate, setToDate] = useState(new Date());\r\n  const onQueryButtonClick = useCallback(\r\n    () =>\r\n      onQuery({\r\n        repository,\r\n        fromDate,\r\n        toDate,\r\n      }),\r\n    [onQuery, repository, fromDate, toDate],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        label=\"Repository\"\r\n        value={repository}\r\n        onChange={onRepositoryInputChange}\r\n        className={classes.input}\r\n        fullWidth={true}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              https://github.com/\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <div>\r\n        <DateTimePicker\r\n          value={fromDate}\r\n          onChange={setFromDate}\r\n          label=\"From\"\r\n          disableFuture={true}\r\n          className={`${classes.input} ${classes.withMarginRight}`}\r\n        />\r\n        <DateTimePicker\r\n          value={toDate}\r\n          onChange={setToDate}\r\n          label=\"To\"\r\n          disableFuture={true}\r\n          className={classes.input}\r\n        />\r\n      </div>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={onQueryButtonClick}>\r\n        Query\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledInputs = withStyles(styles)(Inputs);\r\nexport { StyledInputs as Inputs };\r\n","export const colorPalette = [\r\n  '#52489C',\r\n  '#4062BB',\r\n  '#59C3C3',\r\n  '#535e79',\r\n  '#F45B69',\r\n];\r\n","import { StyleRulesCallback, withStyles, WithStyles } from '@material-ui/core';\r\nimport React, { FunctionComponent } from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Cell,\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nimport { colorPalette } from './color-palette';\r\nimport { TransformedReview } from './interfaces';\r\n\r\nconst styles: StyleRulesCallback<'chartsWrapper'> = (_) => ({\r\n  chartsWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n\r\nconst BARS_LIMIT = 10;\r\n\r\ninterface ChartsOwnProps {\r\n  reviews: TransformedReview[];\r\n}\r\n\r\nconst Charts: FunctionComponent<WithStyles<typeof styles> & ChartsOwnProps> = ({\r\n  classes,\r\n  reviews,\r\n}) => {\r\n  return (\r\n    <div className={classes.chartsWrapper}>\r\n      <ResponsiveContainer width=\"80%\" aspect={1}>\r\n        <PieChart>\r\n          <Pie\r\n            data={reviews}\r\n            nameKey=\"name\"\r\n            dataKey=\"count\"\r\n            label={true}\r\n            labelLine={true}\r\n          >\r\n            {reviews.map((_, index) => (\r\n              <Cell\r\n                fill={colorPalette[index % colorPalette.length]}\r\n                key={index}\r\n              />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n      <ResponsiveContainer width=\"100%\" aspect={2}>\r\n        <BarChart data={reviews.slice(0, BARS_LIMIT)}>\r\n          <CartesianGrid />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Bar dataKey=\"count\" fill={colorPalette[0]} />\r\n          <Tooltip />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledCharts = withStyles(styles)(Charts);\r\nexport { StyledCharts as Charts };\r\n","import { filesReviewedReviewMetric } from './files-reviewed';\r\nimport { linesOfCodeReviewedReviewMetric } from './lines-of-code-reviewed';\r\nimport { prsInteractedWithReviewMetric } from './prs-interacted-with';\r\nimport { totalCommentsReviewMetric } from './total-comments';\r\nimport { ReviewMetric } from './types';\r\n\r\nexport type MetricKind =\r\n  | 'totalComments'\r\n  | 'prsInteractedWith'\r\n  | 'linesOfCodeReviewed'\r\n  | 'filesReviewed';\r\n\r\nexport const metrics: Record<MetricKind, ReviewMetric> = {\r\n  totalComments: totalCommentsReviewMetric,\r\n  prsInteractedWith: prsInteractedWithReviewMetric,\r\n  linesOfCodeReviewed: linesOfCodeReviewedReviewMetric,\r\n  filesReviewed: filesReviewedReviewMetric,\r\n};\r\n","import { ReviewMetric } from './types';\r\n\r\nexport const totalCommentsReviewMetric: ReviewMetric = (pullRequests) => {\r\n  const reviewsMap: Record<string, number> = {};\r\n\r\n  pullRequests.forEach((pr) => {\r\n    pr.reviews.nodes\r\n      .filter((review) => review.author.login !== pr.author.login)\r\n      .forEach((review) => {\r\n        reviewsMap[review.author.login] =\r\n          (reviewsMap[review.author.login] || 0) + review.comments.totalCount;\r\n      });\r\n  });\r\n\r\n  return reviewsMap;\r\n};\r\n","import { ReviewMetric } from './types';\r\n\r\nexport const prsInteractedWithReviewMetric: ReviewMetric = (pullRequests) => {\r\n  const reviewsMap: Record<string, number> = {};\r\n\r\n  pullRequests.forEach((pr) => {\r\n    const involvedUsers = new Set<string>();\r\n\r\n    pr.reviews.nodes.forEach((review) => {\r\n      involvedUsers.add(review.author.login);\r\n    });\r\n\r\n    involvedUsers.delete(pr.author.login);\r\n\r\n    involvedUsers.forEach((user) => {\r\n      reviewsMap[user] = (reviewsMap[user] || 0) + 1;\r\n    });\r\n  });\r\n\r\n  return reviewsMap;\r\n};\r\n","import { ReviewMetric } from './types';\r\n\r\nexport const linesOfCodeReviewedReviewMetric: ReviewMetric = (pullRequests) => {\r\n  const reviewsMap: Record<string, number> = {};\r\n\r\n  pullRequests.forEach((pr) => {\r\n    const involvedUsers = new Set<string>();\r\n\r\n    pr.reviews.nodes.forEach((review) => {\r\n      involvedUsers.add(review.author.login);\r\n    });\r\n\r\n    involvedUsers.delete(pr.author.login);\r\n\r\n    involvedUsers.forEach((user) => {\r\n      reviewsMap[user] = (reviewsMap[user] || 0) + pr.additions + pr.deletions;\r\n    });\r\n  });\r\n\r\n  return reviewsMap;\r\n};\r\n","import { ReviewMetric } from './types';\r\n\r\nexport const filesReviewedReviewMetric: ReviewMetric = (pullRequests) => {\r\n  const reviewsMap: Record<string, number> = {};\r\n\r\n  pullRequests.forEach((pr) => {\r\n    const involvedUsers = new Set<string>();\r\n\r\n    pr.reviews.nodes.forEach((review) => {\r\n      involvedUsers.add(review.author.login);\r\n    });\r\n\r\n    involvedUsers.delete(pr.author.login);\r\n\r\n    involvedUsers.forEach((user) => {\r\n      reviewsMap[user] = (reviewsMap[user] || 0) + pr.changedFiles;\r\n    });\r\n  });\r\n\r\n  return reviewsMap;\r\n};\r\n","import { FormControl, InputLabel, MenuItem } from '@material-ui/core';\r\nimport Select, { SelectProps } from '@material-ui/core/Select';\r\nimport React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\n\r\nimport { Charts } from './charts';\r\nimport { PullRequest } from './interfaces';\r\nimport { MetricKind, metrics } from './metrics';\r\nimport { transformPullRequests } from './transform-pull-requests';\r\n\r\nexport const MetricPickerWithCharts: FunctionComponent<{\r\n  pullRequests: PullRequest[];\r\n}> = ({ pullRequests }) => {\r\n  const [metricKind, setMetricKind] = useState('totalComments' as MetricKind);\r\n  const reviews = useMemo(\r\n    () => transformPullRequests(pullRequests, metrics[metricKind]),\r\n    [metricKind, pullRequests],\r\n  );\r\n\r\n  const onMetricSelectChange = useCallback<\r\n    NonNullable<SelectProps['onChange']>\r\n  >(\r\n    (event) => {\r\n      setMetricKind(event.target.value as MetricKind);\r\n    },\r\n    [setMetricKind],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <FormControl style={{ marginTop: 10 }}>\r\n        <InputLabel htmlFor=\"metric\">Metric</InputLabel>\r\n        <Select\r\n          value={metricKind}\r\n          onChange={onMetricSelectChange}\r\n          inputProps={{ name: 'metric', id: 'metric' }}\r\n        >\r\n          <MenuItem value={'totalComments' as MetricKind}>\r\n            Total comments\r\n          </MenuItem>\r\n          <MenuItem value={'prsInteractedWith' as MetricKind}>\r\n            PRs interacted with\r\n          </MenuItem>\r\n          <MenuItem value={'linesOfCodeReviewed' as MetricKind}>\r\n            Lines of code reviewed\r\n          </MenuItem>\r\n          <MenuItem value={'filesReviewed' as MetricKind}>\r\n            Files reviewed\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <Charts reviews={reviews} />\r\n    </>\r\n  );\r\n};\r\n","import { PullRequest, TransformedReview } from './interfaces';\r\nimport { ReviewMetric } from './metrics/types';\r\n\r\nexport const transformPullRequests = (\r\n  pullRequests: PullRequest[],\r\n  reviewMetric: ReviewMetric,\r\n): TransformedReview[] => {\r\n  const reviewsMap = reviewMetric(pullRequests);\r\n\r\n  const reviews = Object.entries(reviewsMap).map(\r\n    ([name, count]): TransformedReview => ({\r\n      name,\r\n      count,\r\n    }),\r\n  );\r\n  reviews.sort((a, b) => b.count - a.count);\r\n\r\n  return reviews;\r\n};\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { format } from 'date-fns/esm';\r\nimport gql from 'graphql-tag';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { Query } from 'react-apollo';\r\n\r\nimport { ReviewStatsInputs } from './interfaces';\r\nimport { MetricPickerWithCharts } from './metric-picker-with-charts';\r\n\r\nconst GET_REPOSITORY_INFO_QUERY = gql`\r\n  query GetRepositoryInfo(\r\n    $firstPrs: Int!\r\n    $firstReviews: Int!\r\n    $query: String!\r\n  ) {\r\n    search(first: $firstPrs, type: ISSUE, query: $query) {\r\n      nodes {\r\n        ... on PullRequest {\r\n          number\r\n          permalink\r\n          title\r\n          updatedAt\r\n          changedFiles\r\n          additions\r\n          deletions\r\n          author {\r\n            login\r\n          }\r\n          reviews(first: $firstReviews) {\r\n            nodes {\r\n              author {\r\n                login\r\n              }\r\n              comments {\r\n                totalCount\r\n              }\r\n              publishedAt\r\n              state\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface QueryRepositoryProps {\r\n  queryData: ReviewStatsInputs;\r\n}\r\n\r\nexport const QueryRepository: FunctionComponent<QueryRepositoryProps> = ({\r\n  queryData,\r\n}) => {\r\n  const queryVariables = {\r\n    firstPrs: 100,\r\n    firstReviews: 100,\r\n    query: createSearchQueryString(queryData),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Query query={GET_REPOSITORY_INFO_QUERY} variables={queryVariables}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) {\r\n            return <CircularProgress />;\r\n          }\r\n          if (error) {\r\n            console.error('Error while fetching the query', error);\r\n            return 'Error!';\r\n          }\r\n\r\n          return <MetricPickerWithCharts pullRequests={data.search.nodes} />;\r\n        }}\r\n      </Query>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formatGitHubDateTime = (date: Date) =>\r\n  [format(date, 'yyyy-MM-dd'), 'T', format(date, 'HH:mm:ss'), 'Z'].join('');\r\n\r\nconst createSearchQueryString = (queryData: ReviewStatsInputs) =>\r\n  `type:pr repo:${queryData.repository} updated:${formatGitHubDateTime(\r\n    queryData.fromDate,\r\n  )}..${formatGitHubDateTime(queryData.toDate)} sort:updated-desc`;\r\n","import {\r\n  Paper,\r\n  StyleRulesCallback,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport React, { FunctionComponent, useState } from 'react';\r\n\r\nimport { Inputs } from './inputs';\r\nimport { ReviewStatsInputs } from './interfaces';\r\nimport { QueryRepository } from './query-repository';\r\n\r\nconst styles: StyleRulesCallback<'main' | 'input' | 'withMarginLeft'> = (\r\n  theme,\r\n) => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block',\r\n\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginTop: theme.spacing.unit,\r\n\r\n    padding: theme.spacing.unit * 2,\r\n\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: theme.breakpoints.width('lg') - theme.spacing.unit * 2 * 2,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  input: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  withMarginLeft: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nconst ReviewStats: FunctionComponent<WithStyles<typeof styles>> = ({\r\n  classes,\r\n}) => {\r\n  const [queryData, setQueryData] = useState<ReviewStatsInputs | null>(null);\r\n\r\n  return (\r\n    <Paper className={classes.main}>\r\n      <Inputs onQuery={setQueryData} />\r\n\r\n      {queryData && <QueryRepository queryData={queryData} />}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst StyledReviewStats = withStyles(styles)(ReviewStats);\r\nexport { StyledReviewStats as ReviewStats };\r\n","import { combineReducers, createStore } from 'redux';\r\n\r\nimport { AuthenticationAction } from './authentication/actions';\r\nimport { AuthenticationState } from './authentication/interfaces';\r\nimport { authenticationReducerFactory } from './authentication/reducer';\r\n\r\nexport interface StoreState {\r\n  authentication: AuthenticationState;\r\n}\r\n\r\nexport type StoreAction = AuthenticationAction;\r\n\r\nconst reducer = combineReducers<StoreState, StoreAction>({\r\n  authentication: authenticationReducerFactory(localStorage),\r\n});\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n","import { Reducer } from 'redux';\r\n\r\nimport { AuthenticationAction } from './actions';\r\nimport { AuthenticationState } from './interfaces';\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\r\n\r\nexport const authenticationReducerFactory = (\r\n  storage: Storage,\r\n): Reducer<AuthenticationState, AuthenticationAction> => {\r\n  const defaultState: AuthenticationState = {\r\n    accessToken: storage.getItem(ACCESS_TOKEN_STORAGE_KEY) || undefined,\r\n    isLoading: false,\r\n    hasError: false,\r\n    login: undefined,\r\n  };\r\n\r\n  return (state = defaultState, action): AuthenticationState => {\r\n    switch (action.type) {\r\n      case 'AUTHENTICATION_SUCCESS':\r\n        storage.setItem(ACCESS_TOKEN_STORAGE_KEY, action.accessToken);\r\n\r\n        return {\r\n          ...state,\r\n          accessToken: action.accessToken,\r\n          isLoading: false,\r\n        };\r\n\r\n      case 'AUTHENTICATION_ERROR':\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          hasError: true,\r\n        };\r\n\r\n      case 'AUTHENTICATION_STARTED':\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n          hasError: false,\r\n        };\r\n\r\n      case 'AUTHENTICATION_LOGOUT':\r\n        storage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          hasError: false,\r\n          accessToken: undefined,\r\n          login: undefined,\r\n        };\r\n\r\n      case 'AUTHENTICATION_LOGIN':\r\n        return {\r\n          ...state,\r\n          login: action.login,\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","export const getUserProfileUrl = (login: string) =>\r\n  `https://github.com/${login}`;\r\n","import {\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport React, { FunctionComponent, useCallback } from 'react';\r\nimport { connect, DispatchProp, MapStateToProps } from 'react-redux';\r\n\r\nimport { AppTitle } from '../app-title';\r\nimport { authenticationLogout } from '../authentication/actions';\r\nimport { StoreState } from '../store';\r\nimport { getUserProfileUrl } from './get-user-profile-url';\r\n\r\ninterface StateProps {\r\n  login?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<'main' | 'signOutButton'> = (theme) => ({\r\n  main: {\r\n    width: 'auto',\r\n\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    marginTop: theme.spacing.unit,\r\n    padding: theme.spacing.unit,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  signOutButton: {\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nconst UserInfoBar: FunctionComponent<\r\n  StateProps & DispatchProp & WithStyles<typeof styles>\r\n> = ({ login, dispatch, classes }) => {\r\n  if (!login) {\r\n    throw new Error('Login is required');\r\n  }\r\n\r\n  const signOut = useCallback(() => {\r\n    dispatch(authenticationLogout());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Paper className={classes.main}>\r\n      <AppTitle />\r\n\r\n      <Grid container={true} alignItems=\"center\">\r\n        <Grid item={true} xs={8}>\r\n          <Typography>\r\n            Signed in as{' '}\r\n            <Link href={getUserProfileUrl(login)}>\r\n              <strong>{login}</strong>\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item={true} xs={4} className={classes.signOutButton}>\r\n          <Button onClick={signOut} variant=\"contained\">\r\n            Sign out\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<StateProps, {}, StoreState> = ({\r\n  authentication,\r\n}) => ({\r\n  login: authentication.login,\r\n});\r\n\r\nconst ConnectedUserInfoBar = connect(mapStateToProps)(\r\n  withStyles(styles)(UserInfoBar),\r\n);\r\n\r\nexport { ConnectedUserInfoBar as UserInfoBar };\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\r\nimport React, { Component } from 'react';\r\nimport { Provider as StoreProvider } from 'react-redux';\r\n\r\nimport { ApolloSetup } from './apollo/apollo-setup';\r\nimport { AuthChecker } from './authentication/auth-checker';\r\nimport { ReviewStats } from './review-stats/review-stats';\r\nimport { store } from './store';\r\nimport { UserInfoBar } from './user-info-bar/user-info-bar';\r\n\r\nclass App extends Component {\r\n  public render() {\r\n    return (\r\n      <>\r\n        <CssBaseline />\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <StoreProvider store={store}>\r\n            <AuthChecker>\r\n              <ApolloSetup>\r\n                <UserInfoBar />\r\n\r\n                <ReviewStats />\r\n              </ApolloSetup>\r\n            </AuthChecker>\r\n          </StoreProvider>\r\n        </MuiPickersUtilsProvider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString(),\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}