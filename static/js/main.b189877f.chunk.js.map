{"version":3,"sources":["apollo/apollo-setup.tsx","apollo/create-apollo-client.tsx","app-title.tsx","config.ts","authentication/authentication-page.tsx","authentication/loading-auth-data.tsx","authentication/verify-user-authenticated.ts","authentication/actions.ts","authentication/authentication-verifier.tsx","authentication/exchange-code-for-access-token.ts","authentication/auth-checker.tsx","review-stats/inputs.tsx","review-stats/color-palette.ts","review-stats/charts.tsx","review-stats/metrics/index.ts","review-stats/metrics/total-comments.ts","review-stats/metrics/prs-interacted-with.ts","review-stats/metrics/lines-of-code-reviewed.ts","review-stats/metrics/files-reviewed.ts","review-stats/metric-picker-with-charts.tsx","review-stats/transform-pull-requests.ts","review-stats/query-repository.tsx","review-stats/review-stats.tsx","store.ts","authentication/reducer.ts","user-info-bar/get-user-profile-url.ts","user-info-bar/user-info-bar.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ConnectedApolloSetup","connect","_ref2","accessToken","authentication","ApolloSetup","_ref","children","Error","concat","displayName","apolloClient","useMemo","ApolloClient","uri","headers","Authorization","createApolloClient","react_default","a","createElement","react_apollo_browser_umd","client","StyledAppTitle","withStyles","theme","header","marginBottom","spacing","unit","textAlign","classes","index_es","variant","className","githubClientID","process","GITHUB_CLIENT_ID","console","error","config","azureAccessTokenFunctionUrl","getGithubAuthenticationUrl","redirectUrl","window","location","href","queryParams","join","ConnectedAuthenticationPage","state","isLoading","hasError","main","Object","defineProperty","width","display","marginLeft","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","loadingWrapper","gutterBottom","color","StyledLoadingAuthData","wrapper","size","verifyUserAuthenticated","asyncToGenerator","regenerator_default","mark","_callee","dispatch","fetch","response","isAuthenticated","body","wrap","_context","prev","next","method","sent","status","json","type","login","abrupt","stop","this","_x","_x2","_x3","apply","arguments","AuthenticationVerifier","props","_useState","useState","_useState2","slicedToArray","initialized","setInitialized","useEffect","then","Fragment","exchangeCodeForAccessToken","code","JSON","stringify","Content-Type","mode","access_token","t0","AuthChecker","hasInitialized","url","URL","searchParams","has","get","history","replaceState","document","title","pathname","setState","_this$props","authentication_verifier_AuthenticationVerifier","Component","ConnectedAuthChecker","store","StyledInputs","input","withMarginLeft","onQuery","repository","setRepository","_useState3","subDays","Date","_useState4","fromDate","setFromDate","_useState5","_useState6","toDate","setToDate","onQueryButtonClick","useCallback","label","value","onChange","event","target","fullWidth","InputProps","startAdornment","position","material_ui_pickers_esm","disableFuture","onClick","colorPalette","StyledCharts","_","chartsWrapper","reviews","ResponsiveContainer","aspect","PieChart","Pie","data","nameKey","dataKey","labelLine","map","index","Cell","fill","length","key","Tooltip","BarChart","slice","CartesianGrid","XAxis","YAxis","Bar","metrics","totalComments","pullRequests","reviewsMap","forEach","pr","nodes","filter","review","author","comments","totalCount","prsInteractedWith","involvedUsers","Set","add","delete","user","linesOfCodeReviewed","additions","deletions","filesReviewed","changedFiles","MetricPickerWithCharts","metricKind","setMetricKind","reviewMetric","entries","name","count","sort","b","transformPullRequests","onMetricSelectChange","style","htmlFor","Select_default","inputProps","id","GET_REPOSITORY_INFO_QUERY","gql","_templateObject","QueryRepository","queryData","queryVariables","firstPrs","firstReviews","query","createSearchQueryString","variables","loading","metric_picker_with_charts_MetricPickerWithCharts","search","formatGitHubDateTime","date","format","StyledReviewStats","setQueryData","query_repository_QueryRepository","reducer","combineReducers","storage","defaultState","getItem","undefined","action","setItem","objectSpread","removeItem","authenticationReducerFactory","localStorage","createStore","__REDUX_DEVTOOLS_EXTENSION__","getUserProfileUrl","ConnectedUserInfoBar","signOutButton","signOut","container","item","xs","App","utils","DateFnsUtils","es","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","src_App","getElementById","toString","origin","addEventListener","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oQAWA,IAyBMA,EAAuBC,YANwC,SAAAC,GAAA,MAE9D,CACLC,YAHmED,EACnEE,eAE4BD,cAGDF,CAzBsB,SAA7CI,EAA6CC,GAG7C,IAFJH,EAEIG,EAFJH,YACAI,EACID,EADJC,SAEA,IAAKJ,EACH,MAAM,IAAIK,MAAJ,GAAAC,OAEFJ,EAAYK,YAFV,uDAOR,IAAMC,EAAeC,kBAAQ,kBCrBxB,SAA4BT,GACjC,OAAO,IAAIU,IAAa,CACtBC,IAAK,iCACLC,QAAS,CACPC,cAAa,SAAAP,OAAWN,MDiBOc,CAAmBd,IAAc,CAClEA,IAGF,OAAOe,EAAAC,EAAAC,cAACC,EAAA,eAAD,CAAgBC,OAAQX,GAAeJ,8CEJ1CgB,EAAiBC,qBAfsB,SAACC,GAAD,MAAY,CACvDC,OAAQ,CACNC,aAAmC,EAArBF,EAAMG,QAAQC,KAC5BC,UAAW,YAYQN,CARwC,SAAAlB,GAAA,IAC7DyB,EAD6DzB,EAC7DyB,QAD6D,OAG7Db,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWH,EAAQL,QAA5C,yBCTF,IAAMS,EAAiBC,yLAAYC,iBAE9BF,GACHG,QAAQC,MAAM,qDAGT,IAAMC,EAAS,CACpBL,eAAgBA,EAChBM,4BAhBAL,8ECwFIM,EAA6B,WACjC,IAAMC,EAAcC,OAAOC,SAASC,KAC9BC,EAAc,cAAAtC,OACL+B,EAAOL,gBADF,gBAAA1B,OAEFkC,GAChB,cACAK,KAAK,KAEP,kDAAAvC,OAAmDsC,IAY/CE,EAA8BhD,YALhC,SAACiD,GAAD,MAAY,CACdC,UAAWD,EAAM9C,eAAe+C,UAChCC,SAAUF,EAAM9C,eAAegD,WAGGnD,CAClCuB,qBA9FsE,SACtEC,GADsE,MAElE,CACJ4B,KAAKC,OAAAC,EAAA,EAAAD,CAAA,CACHE,MAAO,OAEPC,QAAS,QACTC,WAAiC,EAArBjC,EAAMG,QAAQC,KAC1B8B,YAAkC,EAArBlC,EAAMG,QAAQC,MAC1BJ,EAAMmC,YAAYC,GAAG,IAA2B,EAArBpC,EAAMG,QAAQC,KAAW,GAAK,CACxD2B,MAAO,IACPE,WAAY,OACZC,YAAa,SAGjBG,MAAO,CACLC,UAAgC,EAArBtC,EAAMG,QAAQC,KACzB4B,QAAS,OACTO,cAAe,SACfC,WAAY,SACZC,QAAO,GAAAzD,OAA0B,EAArBgB,EAAMG,QAAQC,KAAnB,OAAApB,OAAsD,EAArBgB,EAAMG,QAAQC,KAA/C,OAAApB,OACW,EADkDgB,EACjEG,QAAQC,KADJ,OAGTsC,eAAgB,CACdrC,UAAW,YAsEbN,CA1DsE,SAAAlB,GAIlE,IAHJyB,EAGIzB,EAHJyB,QACAoB,EAEI7C,EAFJ6C,UACAC,EACI9C,EADJ8C,SAEA,OACElC,EAAAC,EAAAC,cAAA,QAAMc,UAAWH,EAAQsB,MACvBnC,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOE,UAAWH,EAAQ+B,OACxB5C,EAAAC,EAAAC,cAACG,EAAD,MAEC4B,GACCjC,EAAAC,EAAAC,cAAA,OAAKc,UAAWH,EAAQoC,gBACtBjD,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYoC,cAAc,GAA1B,iBACAlD,EAAAC,EAAAC,cAACY,EAAA,EAAD,OAIHoB,GACClC,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYoC,cAAc,EAAMC,MAAM,SAAtC,0DAKAlB,GACAjC,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,QAAQ,YACRoC,MAAM,UACNvB,KAAMJ,KAHR,oCCtDJ4B,EAAwB9C,qBAlBQ,CACpC+C,QAAS,CACPf,MAAO,OACP1B,UAAW,SACXiC,UAAW,KAcevC,CAVyC,SAAAlB,GAEjE,IADJyB,EACIzB,EADJyB,QAEA,OACEb,EAAAC,EAAAC,cAAA,OAAKc,UAAWH,EAAQwC,SACtBrD,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAkBwC,KAAM,QCTjBC,EAAuB,eAAAnE,EAAAgD,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxD,EAAAyD,KAAG,SAAAC,EACrCC,EACAC,EACA5E,GAHqC,IAAA6E,EAAAC,EAAAC,EAAA,OAAAP,EAAAxD,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAKdP,EAAM,8BAA+B,CAC1DQ,OAAQ,MACRxE,QAAS,CACPC,cAAa,SAAAP,OAAWN,MARS,UAK/B6E,EAL+BI,EAAAI,OAY/BP,EAAsC,MAApBD,EAASS,QAZI,CAAAL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAehBN,EAASU,OAfO,OAe7BR,EAf6BE,EAAAI,KAgBnCV,ECc6B,CAC/Ba,KAAM,uBACNC,MDhB+BV,EAAKU,QAhBCR,EAAAE,KAAA,iBAkBnCR,ECEmE,CACrEa,KAAM,0BDrB+B,eAAAP,EAAAS,OAAA,SAqB9BZ,GArB8B,yBAAAG,EAAAU,SAAAjB,EAAAkB,SAAH,gBAAAC,EAAAC,EAAAC,GAAA,OAAA5F,EAAA6F,MAAAJ,KAAAK,YAAA,GEGvBC,EAET,SAACC,GAAU,IAAAC,EACyBC,oBAAS,GADlCC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAiD,EAAA,GACNI,EADMF,EAAA,GACOG,EADPH,EAAA,GAWb,OARAI,oBAAU,WACRD,GAAe,GAEfnC,EAAwB6B,EAAMxB,SAAUC,MAAOuB,EAAMnG,aAAa2G,KAAK,kBACrEF,GAAe,MAEhB,CAACN,EAAMnG,cAENwG,EACKzF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KAAGT,EAAM/F,UAGXW,EAAAC,EAAAC,cAACkD,EAAD,OClBI0C,EAA0B,eAAA1G,EAAAgD,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxD,EAAAyD,KAAG,SAAAC,EACxCC,EACAC,EACAkC,GAHwC,IAAAjC,EAAAE,EAAA,OAAAP,EAAAxD,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAKxCR,EFXuE,CACvEa,KAAM,2BEKkCP,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAQfP,EAAMvC,EAAOC,4BAA6B,CAC/D8C,OAAQ,OACRL,KAAMgC,KAAKC,UAAU,CACnBF,SAEFlG,QAAS,CACPqG,eAAgB,oBAElBC,KAAM,SAhB8B,cAQhCrC,EARgCI,EAAAI,KAAAJ,EAAAE,KAAA,EAmBnBN,EAASU,OAnBU,WAmBhCR,EAnBgCE,EAAAI,MAoB5B8B,aApB4B,CAAAlC,EAAAE,KAAA,eAqBpChD,QAAQC,MACN,4DACA2C,GAEI,IAAI1E,MAAM,qBAzBoB,QA4BtCsE,EFvB+B,CACjC3E,YEsBiC+E,EAAKoC,aFrBtC3B,KAAM,2BEPkCP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmC,GAAAnC,EAAA,SA8BtCN,EFlBiE,CACnEa,KAAM,yBEbkC,yBAAAP,EAAAU,SAAAjB,EAAAkB,KAAA,aAAH,gBAAAC,EAAAC,EAAAC,GAAA,OAAA5F,EAAA6F,MAAAJ,KAAAK,YAAA,GCSjCoB,6MACGtE,MAA0B,CAC/BuE,gBAAgB,uMAIVC,EAAM,IAAIC,IAAI/E,OAAOC,SAASC,OAE5B8E,aAAaC,IAAI,UACjBZ,EAAOS,EAAIE,aAAaE,IAAI,QAClClF,OAAOmF,QAAQC,aACb,KACAC,SAASC,MACTtF,OAAOC,SAASsF,UAGlBnB,EAA2BjB,KAAKO,MAAMxB,SAAUC,MAAOkC,IAGzDlB,KAAKqC,SAAS,CACZX,gBAAgB,uIAIJ,IAAAY,EAC8BtC,KAAKO,MAAzC/F,EADM8H,EACN9H,SAAUJ,EADJkI,EACIlI,YAAa2E,EADjBuD,EACiBvD,SAG/B,OAF2BiB,KAAK7C,MAAxBuE,eAMHtH,EAKHe,EAAAC,EAAAC,cAACkH,EAAD,CAAwBnI,YAAaA,EAAa2E,SAAUA,GACzDvE,GALIW,EAAAC,EAAAC,cAAC6B,EAAD,MAJA/B,EAAAC,EAAAC,cAACkD,EAAD,aA7BaiE,aAkDpBC,EAAuBvI,YANwC,SACnEwI,GADmE,MAE/D,CACJtI,YAAasI,EAAMrI,eAAeD,cAGPF,CAAyBuH,YCuBhDkB,EAAelH,qBA7E0C,SAACC,GAAD,MAAY,CACzEkH,MAAO,CACLhH,aAAmC,EAArBF,EAAMG,QAAQC,MAE9B+G,eAAgB,CACdlF,WAAYjC,EAAMG,QAAQC,QAwETL,CAhEsD,SAAAlB,GAGrE,IAFJyB,EAEIzB,EAFJyB,QACA8G,EACIvI,EADJuI,QACItC,EACgCC,mBAAS,kBADzCC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAiD,EAAA,GACGuC,EADHrC,EAAA,GACesC,EADftC,EAAA,GAAAuC,EAQ4BxC,mBAASyC,YAAQ,IAAIC,KAAQ,IARzDC,EAAA7F,OAAAoD,EAAA,EAAApD,CAAA0F,EAAA,GAQGI,EARHD,EAAA,GAQaE,EARbF,EAAA,GAAAG,EASwB9C,mBAAS,IAAI0C,MATrCK,EAAAjG,OAAAoD,EAAA,EAAApD,CAAAgG,EAAA,GASGE,EATHD,EAAA,GASWE,EATXF,EAAA,GAUEG,EAAqBC,sBACzB,kBACEd,EAAQ,CACNC,aACAM,WACAI,YAEJ,CAACX,EAASC,EAAYM,EAAUI,IAGlC,OACEtI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACE7F,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACE4H,MAAM,aACNC,MAAOf,EACPgB,SAvBmE,SACvEC,GAEAhB,EAAcgB,EAAMC,OAAOH,QAqBvB3H,UAAWH,EAAQ4G,MACnBsB,WAAW,EACXC,WAAY,CACVC,eACEjJ,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAgBoI,SAAS,SAAzB,0BAONlJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CACER,MAAOT,EACPU,SAAUT,EACVO,MAAM,OACNU,eAAe,EACfpI,UAAWH,EAAQ4G,QAErBzH,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CACER,MAAOL,EACPM,SAAUL,EACVG,MAAM,KACNU,eAAe,EACfpI,UAAS,GAAAzB,OAAKsB,EAAQ4G,MAAb,KAAAlI,OAAsBsB,EAAQ6G,mBAI3C1H,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYoC,MAAM,UAAUkG,QAASb,GAArD,4JCrFOc,EAAe,CAC1B,UACA,UACA,UACA,UACA,WCiEIC,GAAejJ,qBApD+B,SAACkJ,GAAD,MAAQ,CAC1DC,cAAe,CACblH,QAAS,OACTQ,WAAY,SACZD,cAAe,YAgDExC,CAtCyD,SAAAlB,GAGxE,IAFJyB,EAEIzB,EAFJyB,QACA6I,EACItK,EADJsK,QAEA,OACE1J,EAAAC,EAAAC,cAAA,OAAKc,UAAWH,EAAQ4I,eACtBzJ,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAqBrH,MAAM,MAAMsH,OAAQ,GACvC5J,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,KACE7J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACEC,KAAML,EACNM,QAAQ,OACRC,QAAQ,QACRvB,OAAO,EACPwB,WAAW,GAEVR,EAAQS,IAAI,SAACX,EAAGY,GAAJ,OACXpK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CACEC,KAAMhB,EAAac,EAAQd,EAAaiB,QACxCC,IAAKJ,OAIXpK,EAAAC,EAAAC,cAACuK,EAAA,EAAD,QAGJzK,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAqBrH,MAAM,OAAOsH,OAAQ,GACxC5J,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAUX,KAAML,EAAQiB,MAAM,EAhCnB,KAiCT3K,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,MACA5K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOZ,QAAQ,SACfjK,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,MACA9K,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAKd,QAAQ,QAAQK,KAAMhB,EAAa,KACxCtJ,EAAAC,EAAAC,cAACuK,EAAA,EAAD,WCnDGO,GAA4C,CACvDC,cCXqD,SAACC,GACtD,IAAMC,EAAqC,GAW3C,OATAD,EAAaE,QAAQ,SAACC,GACpBA,EAAG3B,QAAQ4B,MACRC,OAAO,SAACC,GAAD,OAAYA,EAAOC,OAAO/G,QAAU2G,EAAGI,OAAO/G,QACrD0G,QAAQ,SAACI,GACRL,EAAWK,EAAOC,OAAO/G,QACtByG,EAAWK,EAAOC,OAAO/G,QAAU,GAAK8G,EAAOE,SAASC,eAI1DR,GDAPS,kBEZyD,SAACV,GAC1D,IAAMC,EAAqC,GAgB3C,OAdAD,EAAaE,QAAQ,SAACC,GACpB,IAAMQ,EAAgB,IAAIC,IAE1BT,EAAG3B,QAAQ4B,MAAMF,QAAQ,SAACI,GACxBK,EAAcE,IAAIP,EAAOC,OAAO/G,SAGlCmH,EAAcG,OAAOX,EAAGI,OAAO/G,OAE/BmH,EAAcT,QAAQ,SAACa,GACrBd,EAAWc,IAASd,EAAWc,IAAS,GAAK,MAI1Cd,GFJPe,oBGb2D,SAAChB,GAC5D,IAAMC,EAAqC,GAgB3C,OAdAD,EAAaE,QAAQ,SAACC,GACpB,IAAMQ,EAAgB,IAAIC,IAE1BT,EAAG3B,QAAQ4B,MAAMF,QAAQ,SAACI,GACxBK,EAAcE,IAAIP,EAAOC,OAAO/G,SAGlCmH,EAAcG,OAAOX,EAAGI,OAAO/G,OAE/BmH,EAAcT,QAAQ,SAACa,GACrBd,EAAWc,IAASd,EAAWc,IAAS,GAAKZ,EAAGc,UAAYd,EAAGe,cAI5DjB,GHHPkB,cIdqD,SAACnB,GACtD,IAAMC,EAAqC,GAgB3C,OAdAD,EAAaE,QAAQ,SAACC,GACpB,IAAMQ,EAAgB,IAAIC,IAE1BT,EAAG3B,QAAQ4B,MAAMF,QAAQ,SAACI,GACxBK,EAAcE,IAAIP,EAAOC,OAAO/G,SAGlCmH,EAAcG,OAAOX,EAAGI,OAAO/G,OAE/BmH,EAAcT,QAAQ,SAACa,GACrBd,EAAWc,IAASd,EAAWc,IAAS,GAAKZ,EAAGiB,iBAI7CnB,ICLIoB,GAER,SAAAnN,GAAsB,IAAnB8L,EAAmB9L,EAAnB8L,aAAmB7F,EACWC,mBAAS,iBADpBC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAiD,EAAA,GAClBmH,EADkBjH,EAAA,GACNkH,EADMlH,EAAA,GAEnBmE,EAAUhK,kBACd,kBChBiC,SACnCwL,EACAwB,GAEA,IAAMvB,EAAauB,EAAaxB,GAE1BxB,EAAUtH,OAAOuK,QAAQxB,GAAYhB,IACzC,SAAA/K,GAAA,IAAAJ,EAAAoD,OAAAoD,EAAA,EAAApD,CAAAhD,EAAA,SAAuC,CACrCwN,KADF5N,EAAA,GAEE6N,MAFF7N,EAAA,MAOF,OAFA0K,EAAQoD,KAAK,SAAC7M,EAAG8M,GAAJ,OAAUA,EAAEF,MAAQ5M,EAAE4M,QAE5BnD,EDECsD,CAAsB9B,EAAcF,GAAQwB,KAClD,CAACA,EAAYtB,IAGT+B,EAAuBxE,sBAG3B,SAACI,GACC4D,EAAc5D,EAAMC,OAAOH,QAE7B,CAAC8D,IAGH,OACEzM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACE7F,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaoM,MAAO,CAAErK,UAAW,KAC/B7C,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYqM,QAAQ,UAApB,UACAnN,EAAAC,EAAAC,cAACkN,EAAAnN,EAAD,CACE0I,MAAO6D,EACP5D,SAAUqE,EACVI,WAAY,CAAET,KAAM,SAAUU,GAAI,WAElCtN,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAU6H,MAAO,iBAAjB,kBAGA3I,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAU6H,MAAO,qBAAjB,uBAGA3I,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAU6H,MAAO,uBAAjB,0BAGA3I,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAU6H,MAAO,iBAAjB,oBAMJ3I,EAAAC,EAAAC,cAACqJ,GAAD,CAAQG,QAASA,oxBE/CvB,IAAM6D,GAA4BC,IAAHC,MAyClBC,GAA2D,SAAAtO,GAElE,IADJuO,EACIvO,EADJuO,UAEMC,EAAiB,CACrBC,SAAU,IACVC,aAAc,IACdC,MAAOC,GAAwBL,IAGjC,OACE3N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAO4N,MAAOR,GAA2BU,UAAWL,GACjD,SAAA5O,GAA8B,IAA3BkP,EAA2BlP,EAA3BkP,QAAS7M,EAAkBrC,EAAlBqC,MAAO0I,EAAW/K,EAAX+K,KAClB,OAAImE,EACKlO,EAAAC,EAAAC,cAACY,EAAA,EAAD,MAELO,GACFD,QAAQC,MAAM,iCAAkCA,GACzC,UAGFrB,EAAAC,EAAAC,cAACiO,GAAD,CAAwBjD,aAAcnB,EAAKqE,OAAO9C,YAO7D+C,GAAuB,SAACC,GAAD,MAC3B,CAACC,YAAOD,EAAM,cAAe,IAAKC,YAAOD,EAAM,YAAa,KAAKxM,KAAK,KAElEkM,GAA0B,SAACL,GAAD,sBAAApO,OACdoO,EAAU/F,WADI,aAAArI,OACkB8O,GAC9CV,EAAUzF,UAFkB,MAAA3I,OAGxB8O,GAAqBV,EAAUrF,QAHP,uBC5B1BkG,GAAoBlO,qBAzC8C,SACtEC,GADsE,MAElE,CACJ4B,KAAKC,OAAAC,EAAA,EAAAD,CAAA,CACHE,MAAO,OACPC,QAAS,QAETC,WAAiC,EAArBjC,EAAMG,QAAQC,KAC1B8B,YAAkC,EAArBlC,EAAMG,QAAQC,KAC3BkC,UAAWtC,EAAMG,QAAQC,KAEzBqC,QAA8B,EAArBzC,EAAMG,QAAQC,MAEtBJ,EAAMmC,YAAYC,GAAG,MAAQ,CAC5BL,MAAO/B,EAAMmC,YAAYJ,MAAM,MAA6B,EAArB/B,EAAMG,QAAQC,KAAW,EAChE6B,WAAY,OACZC,YAAa,SAGjBgF,MAAO,CACLhH,aAAmC,EAArBF,EAAMG,QAAQC,MAE9B+G,eAAgB,CACdlF,WAAYjC,EAAMG,QAAQC,QAkBJL,CAdwC,SAAAlB,GAE5D,IADJyB,EACIzB,EADJyB,QACIwE,EAC8BC,mBAAmC,MADjEC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAiD,EAAA,GACGsI,EADHpI,EAAA,GACckJ,EADdlJ,EAAA,GAGJ,OACEvF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOE,UAAWH,EAAQsB,MACxBnC,EAAAC,EAAAC,cAACsH,EAAD,CAAQG,QAAS8G,IAEhBd,GAAa3N,EAAAC,EAAAC,cAACwO,GAAD,CAAiBf,UAAWA,0BCpC1CgB,GAAUC,aAAyC,CACvD1P,eCN0C,SAC1C2P,GAEA,IAAMC,EAAoC,CACxC7P,YAAa4P,EAAQE,QANQ,qBAM6BC,EAC1D/M,WAAW,EACXC,UAAU,EACVwC,WAAOsK,GAGT,OAAO,WAAuD,IAAtDhN,EAAsDkD,UAAAqF,OAAA,QAAAyE,IAAA9J,UAAA,GAAAA,UAAA,GAA9C4J,EAAcG,EAAgC/J,UAAAqF,OAAA,EAAArF,UAAA,QAAA8J,EAC5D,OAAQC,EAAOxK,MACb,IAAK,yBAGH,OAFAoK,EAAQK,QAfiB,cAeiBD,EAAOhQ,aAE1CmD,OAAA+M,GAAA,EAAA/M,CAAA,GACFJ,EADL,CAEE/C,YAAagQ,EAAOhQ,YACpBgD,WAAW,IAGf,IAAK,uBACH,OAAOG,OAAA+M,GAAA,EAAA/M,CAAA,GACFJ,EADL,CAEEC,WAAW,EACXC,UAAU,IAGd,IAAK,yBACH,OAAOE,OAAA+M,GAAA,EAAA/M,CAAA,GACFJ,EADL,CAEEC,WAAW,EACXC,UAAU,IAGd,IAAK,wBAGH,OAFA2M,EAAQO,WAtCiB,eAwClBhN,OAAA+M,GAAA,EAAA/M,CAAA,GACFJ,EADL,CAEEC,WAAW,EACXC,UAAU,EACVjD,iBAAa+P,EACbtK,WAAOsK,IAGX,IAAK,uBACH,OAAO5M,OAAA+M,GAAA,EAAA/M,CAAA,GACFJ,EADL,CAEE0C,MAAOuK,EAAOvK,QAGlB,QACE,OAAO1C,ID/CGqN,CAA6BC,gBAGlC/H,GAAQgI,aACnBZ,GACCjN,OAAe8N,8BACb9N,OAAe8N,gCEnBPC,GAAoB,SAAC/K,GAAD,4BAAAnF,OACTmF,ICkFlBgL,GAAuB3Q,YANwC,SAAAC,GAAA,MAE9D,CACL0F,MAHmE1F,EACnEE,eAEsBwF,QAGK3F,CAC3BuB,qBA9D2D,SAACC,GAAD,MAAY,CACvE4B,KAAKC,OAAAC,EAAA,EAAAD,CAAA,CACHE,MAAO,OAEPC,QAAS,QACTC,WAAiC,EAArBjC,EAAMG,QAAQC,KAC1B8B,YAAkC,EAArBlC,EAAMG,QAAQC,KAC3BkC,UAAWtC,EAAMG,QAAQC,KACzBqC,QAASzC,EAAMG,QAAQC,MACtBJ,EAAMmC,YAAYC,GAAG,IAA2B,EAArBpC,EAAMG,QAAQC,KAAW,GAAK,CACxD2B,MAAO,IACPE,WAAY,OACZC,YAAa,SAGjBkN,cAAe,CACb/O,UAAW,WA8CbN,CAxCE,SAAAlB,GAAkC,IAA/BsF,EAA+BtF,EAA/BsF,MAAOd,EAAwBxE,EAAxBwE,SAAU/C,EAAczB,EAAdyB,QACtB,IAAK6D,EACH,MAAM,IAAIpF,MAAM,qBAGlB,IAAMsQ,EAAUnH,sBAAY,WAC1B7E,EnBtBmE,CACrEa,KAAM,2BmBsBH,CAACb,IAEJ,OACE5D,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOE,UAAWH,EAAQsB,MACxBnC,EAAAC,EAAAC,cAACG,EAAD,MAEAL,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAM+O,WAAW,EAAM9M,WAAW,UAChC/C,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMgP,MAAM,EAAMC,GAAI,GACpB/P,EAAAC,EAAAC,cAACY,EAAA,EAAD,oBACe,IACbd,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMc,KAAM6N,GAAkB/K,IAC5B1E,EAAAC,EAAAC,cAAA,cAASwE,MAKf1E,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMgP,MAAM,EAAMC,GAAI,EAAG/O,UAAWH,EAAQ8O,eAC1C3P,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQuI,QAASuG,EAAS7O,QAAQ,aAAlC,kBCnCKiP,oLAnBX,OACEhQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACE7F,EAAAC,EAAAC,cAACY,EAAA,EAAD,MACAd,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAyB8G,MAAOC,KAC9BlQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAe5I,MAAOA,IACpBvH,EAAAC,EAAAC,cAACoH,EAAD,KACEtH,EAAAC,EAAAC,cAACpB,EAAD,KACEkB,EAAAC,EAAAC,cAACwP,GAAD,MAEA1P,EAAAC,EAAAC,cAACsO,GAAD,kBAXEnH,aCDZ+I,GAAcC,QACW,cAA7B3O,OAAOC,SAAS2O,UAEe,UAA7B5O,OAAOC,SAAS2O,UAEhB5O,OAAOC,SAAS2O,SAASC,MACvB,2DAyCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT7K,KAAK,SAACiL,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/O,QACf0O,UAAUC,cAAcO,WAK1B9P,QAAQ+P,IAAI,6CAKZ/P,QAAQ+P,IAAI,4CAOvBC,MAAM,SAAC/P,GACND,QAAQC,MAAM,4CAA6CA,KC/EjEgQ,SAAgBrR,EAAAC,EAAAC,cAACoR,GAAD,MAASvK,SAASwK,eAAe,SDelC,WACb,GAA6C,kBAAmBb,UAAW,CAMzE,GAJkB,IAAIjK,IACpBvF,uBACAQ,OAAOC,SAAS6P,YAEJC,SAAW/P,OAAOC,SAAS8P,OAIvC,OAGF/P,OAAOgQ,iBAAiB,OAAQ,WAC9B,IAAMjB,EAAK,GAAAlR,OAAM2B,uBAAN,sBAEPkP,IAmDV,SAAiCK,GAE/B5M,MAAM4M,GACH7K,KAAK,SAAC9B,GAGiB,MAApBA,EAASS,SACwD,IAAjET,EAASjE,QAAQ+G,IAAI,gBAAiB+K,QAAQ,cAG9CjB,UAAUC,cAAciB,MAAMhM,KAAK,SAACiL,GAClCA,EAAagB,aAAajM,KAAK,WAC7BlE,OAAOC,SAASmQ,aAKpBtB,GAAgBC,KAGnBW,MAAM,WACLhQ,QAAQ+P,IACN,mEAvEAY,CAAwBtB,GAIxBC,UAAUC,cAAciB,MAAMhM,KAAK,WACjCxE,QAAQ+P,IACN,+GAMJX,GAAgBC,MC7CxBuB","file":"static/js/main.b189877f.chunk.js","sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { connect, MapStateToProps } from 'react-redux';\n\nimport { StoreState } from '../store';\nimport { createApolloClient } from './create-apollo-client';\n\ninterface StateProps {\n  accessToken?: string;\n}\n\nconst ApolloSetup: FunctionComponent<StateProps> = ({\n  accessToken,\n  children,\n}) => {\n  if (!accessToken) {\n    throw new Error(\n      `${\n        ApolloSetup.displayName\n      } should be rendered only if the user is logged in.`,\n    );\n  }\n\n  const apolloClient = useMemo(() => createApolloClient(accessToken), [\n    accessToken,\n  ]);\n\n  return <ApolloProvider client={apolloClient}>{children}</ApolloProvider>;\n};\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, StoreState> = ({\n  authentication,\n}) => ({\n  accessToken: authentication.accessToken,\n});\n\nconst ConnectedApolloSetup = connect(mapStateToProps)(ApolloSetup);\nexport { ConnectedApolloSetup as ApolloSetup };\n","import ApolloClient from 'apollo-boost';\n\nexport function createApolloClient(accessToken: string) {\n  return new ApolloClient({\n    uri: 'https://api.github.com/graphql',\n    headers: {\n      Authorization: `token ${accessToken}`,\n    },\n  });\n}\n","import {\n  StyleRulesCallback,\n  Typography,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport React, { FunctionComponent } from 'react';\n\nconst styles: StyleRulesCallback<'header'> = (theme) => ({\n  header: {\n    marginBottom: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n});\n\nconst AppTitle: FunctionComponent<WithStyles<typeof styles>> = ({\n  classes,\n}) => (\n  <Typography variant=\"h4\" className={classes.header}>\n    GitHub Review Stats\n  </Typography>\n);\n\nconst StyledAppTitle = withStyles(styles)(AppTitle);\nexport { StyledAppTitle as AppTitle };\n","const azureAccessTokenFunctionUrl =\n  process.env.REACT_APP_AZURE_ACCESS_TOKEN_FUNCTION_URL;\n\nif (!azureAccessTokenFunctionUrl) {\n  console.error(\n    'REACT_APP_AZURE_ACCESS_TOKEN_FUNCTION_URL environment variable is not set.',\n  );\n}\n\nconst githubClientID = process.env.GITHUB_CLIENT_ID;\n\nif (!githubClientID) {\n  console.error('GITHUB_CLIENT_ID environment variable is not set.');\n}\n\nexport const config = {\n  githubClientID: githubClientID as string,\n  azureAccessTokenFunctionUrl: azureAccessTokenFunctionUrl as string,\n};\n","import {\n  Button,\n  CircularProgress,\n  Paper,\n  StyleRulesCallback,\n  Typography,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport React, { StatelessComponent } from 'react';\nimport { connect, MapStateToProps } from 'react-redux';\n\nimport { AppTitle } from '../app-title';\nimport { config } from '../config';\nimport { StoreState } from '../store';\n\nconst styles: StyleRulesCallback<'main' | 'paper' | 'loadingWrapper'> = (\n  theme,\n) => ({\n  main: {\n    width: 'auto',\n\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`,\n  },\n  loadingWrapper: {\n    textAlign: 'center',\n  },\n});\n\ninterface AuthenticationPageStateProps {\n  isLoading: boolean;\n  hasError: boolean;\n}\n\ntype AuthenticationPageProps = WithStyles<typeof styles> &\n  AuthenticationPageStateProps;\n\nconst AuthenticationPage: StatelessComponent<AuthenticationPageProps> = ({\n  classes,\n  isLoading,\n  hasError,\n}) => {\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <AppTitle />\n\n        {isLoading && (\n          <div className={classes.loadingWrapper}>\n            <Typography gutterBottom={true}>Signing in...</Typography>\n            <CircularProgress />\n          </div>\n        )}\n\n        {hasError && (\n          <Typography gutterBottom={true} color=\"error\">\n            An error occurred while signing in. Please try again.\n          </Typography>\n        )}\n\n        {!isLoading && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            href={getGithubAuthenticationUrl()}\n          >\n            Sign up with GitHub\n          </Button>\n        )}\n      </Paper>\n    </main>\n  );\n};\n\nconst getGithubAuthenticationUrl = () => {\n  const redirectUrl = window.location.href;\n  const queryParams = [\n    `client_id=${config.githubClientID}`,\n    `redirect_uri=${redirectUrl}`,\n    'scope=repo',\n  ].join('&');\n\n  return `https://github.com/login/oauth/authorize?${queryParams}`;\n};\n\nconst mapStateToProps: MapStateToProps<\n  AuthenticationPageStateProps,\n  {},\n  StoreState\n> = (state) => ({\n  isLoading: state.authentication.isLoading,\n  hasError: state.authentication.hasError,\n});\n\nconst ConnectedAuthenticationPage = connect(mapStateToProps)(\n  withStyles(styles)(AuthenticationPage),\n);\nexport { ConnectedAuthenticationPage as AuthenticationPage };\n","import { CircularProgress, withStyles } from '@material-ui/core';\nimport { StyleRules, WithStyles } from '@material-ui/core/styles';\nimport React, { StatelessComponent } from 'react';\n\nconst styles: StyleRules<'wrapper'> = {\n  wrapper: {\n    width: '100%',\n    textAlign: 'center',\n    marginTop: 50,\n  },\n};\n\nconst LoadingAuthData: StatelessComponent<WithStyles<typeof styles>> = ({\n  classes,\n}) => {\n  return (\n    <div className={classes.wrapper}>\n      <CircularProgress size={50} />\n    </div>\n  );\n};\n\nconst StyledLoadingAuthData = withStyles(styles)(LoadingAuthData);\nexport { StyledLoadingAuthData as LoadingAuthData };\n","import { Dispatch } from 'redux';\n\nimport {\n  AuthenticationAction,\n  authenticationLogin,\n  authenticationLogout,\n} from './actions';\n\nexport const verifyUserAuthenticated = async (\n  dispatch: Dispatch<AuthenticationAction>,\n  fetch: typeof window.fetch,\n  accessToken: string,\n) => {\n  const response = await fetch('https://api.github.com/user', {\n    method: 'GET',\n    headers: {\n      Authorization: `token ${accessToken}`,\n    },\n  });\n\n  const isAuthenticated = response.status === 200;\n\n  if (isAuthenticated) {\n    const body = await response.json();\n    dispatch(authenticationLogin(body.login));\n  } else {\n    dispatch(authenticationLogout());\n  }\n\n  return isAuthenticated;\n};\n","import { Action } from 'redux';\n\nexport type AuthenticationStartedAction = Action<'AUTHENTICATION_STARTED'>;\n\nexport const authenticationStarted = (): AuthenticationStartedAction => ({\n  type: 'AUTHENTICATION_STARTED',\n});\n\nexport interface AuthenticationSuccessAction\n  extends Action<'AUTHENTICATION_SUCCESS'> {\n  accessToken: string;\n}\n\nexport const authenticationSuccess = (\n  accessToken: string,\n): AuthenticationSuccessAction => ({\n  accessToken,\n  type: 'AUTHENTICATION_SUCCESS',\n});\n\nexport type AuthenticationErrorAction = Action<'AUTHENTICATION_ERROR'>;\n\nexport const authenticationError = (): AuthenticationErrorAction => ({\n  type: 'AUTHENTICATION_ERROR',\n});\n\nexport type AuthenticationLogoutAction = Action<'AUTHENTICATION_LOGOUT'>;\n\nexport const authenticationLogout = (): AuthenticationLogoutAction => ({\n  type: 'AUTHENTICATION_LOGOUT',\n});\n\nexport type AuthenticationLoginAction = Action<'AUTHENTICATION_LOGIN'> & {\n  login: string;\n};\n\nexport const authenticationLogin = (\n  login: string,\n): AuthenticationLoginAction => ({\n  type: 'AUTHENTICATION_LOGIN',\n  login,\n});\n\nexport type AuthenticationAction =\n  | AuthenticationSuccessAction\n  | AuthenticationErrorAction\n  | AuthenticationStartedAction\n  | AuthenticationLogoutAction\n  | AuthenticationLoginAction;\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { Dispatch } from 'redux';\n\nimport { LoadingAuthData } from './loading-auth-data';\nimport { verifyUserAuthenticated } from './verify-user-authenticated';\n\ninterface AuthenticationVerifierProps {\n  accessToken: string;\n  dispatch: Dispatch;\n}\n\nexport const AuthenticationVerifier: FunctionComponent<\n  AuthenticationVerifierProps\n> = (props) => {\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    setInitialized(false);\n\n    verifyUserAuthenticated(props.dispatch, fetch, props.accessToken).then(() =>\n      setInitialized(true),\n    );\n  }, [props.accessToken]);\n\n  if (initialized) {\n    return <>{props.children}</>;\n  }\n\n  return <LoadingAuthData />;\n};\n","import { Dispatch } from 'redux';\n\nimport { config } from '../config';\nimport {\n  AuthenticationAction,\n  authenticationError,\n  authenticationStarted,\n  authenticationSuccess,\n} from './actions';\n\nexport const exchangeCodeForAccessToken = async (\n  dispatch: Dispatch<AuthenticationAction>,\n  fetch: typeof window.fetch,\n  code: string,\n) => {\n  dispatch(authenticationStarted());\n\n  try {\n    const response = await fetch(config.azureAccessTokenFunctionUrl, {\n      method: 'POST',\n      body: JSON.stringify({\n        code,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n    });\n\n    const body = await response.json();\n    if (!body.access_token) {\n      console.error(\n        'Could not sign in via an Azure function. Payload received',\n        body,\n      );\n      throw new Error('Could not sign in');\n    }\n\n    dispatch(authenticationSuccess(body.access_token));\n  } catch (error) {\n    dispatch(authenticationError());\n  }\n};\n","import React, { Component } from 'react';\nimport { connect, DispatchProp, MapStateToProps } from 'react-redux';\n\nimport { StoreState } from '../store';\nimport { AuthenticationPage } from './authentication-page';\nimport { AuthenticationVerifier } from './authentication-verifier';\nimport { exchangeCodeForAccessToken } from './exchange-code-for-access-token';\nimport { LoadingAuthData } from './loading-auth-data';\n\ninterface StoreProps {\n  accessToken?: string;\n}\n\ntype AuthCheckerProps = StoreProps & DispatchProp;\n\ninterface AuthCheckerState {\n  hasInitialized: boolean;\n}\n\nclass AuthChecker extends Component<AuthCheckerProps, AuthCheckerState> {\n  public state: AuthCheckerState = {\n    hasInitialized: false,\n  };\n\n  public async componentDidMount() {\n    const url = new URL(window.location.href);\n\n    if (url.searchParams.has('code')) {\n      const code = url.searchParams.get('code') as string;\n      window.history.replaceState(\n        null,\n        document.title,\n        window.location.pathname,\n      );\n\n      exchangeCodeForAccessToken(this.props.dispatch, fetch, code);\n    }\n\n    this.setState({\n      hasInitialized: true,\n    });\n  }\n\n  public render() {\n    const { children, accessToken, dispatch } = this.props;\n    const { hasInitialized } = this.state;\n\n    if (!hasInitialized) {\n      return <LoadingAuthData />;\n    }\n\n    if (!accessToken) {\n      return <AuthenticationPage />;\n    }\n\n    return (\n      <AuthenticationVerifier accessToken={accessToken} dispatch={dispatch}>\n        {children}\n      </AuthenticationVerifier>\n    );\n  }\n}\n\nconst mapStateToProps: MapStateToProps<StoreProps, {}, StoreState> = (\n  store,\n) => ({\n  accessToken: store.authentication.accessToken,\n});\n\nconst ConnectedAuthChecker = connect(mapStateToProps)(AuthChecker);\n\nexport { ConnectedAuthChecker as AuthChecker };\n","import {\n  Button,\n  InputAdornment,\n  StyleRulesCallback,\n  TextField,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { TextFieldProps } from '@material-ui/core/TextField';\nimport { subDays } from 'date-fns/esm';\nimport { DateTimePicker } from 'material-ui-pickers';\nimport React, { FunctionComponent, useCallback, useState } from 'react';\n\nimport { ReviewStatsInputs } from './interfaces';\n\nconst styles: StyleRulesCallback<'input' | 'withMarginLeft'> = (theme) => ({\n  input: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n  withMarginLeft: {\n    marginLeft: theme.spacing.unit,\n  },\n});\n\ninterface InputsProps {\n  onQuery: (inputs: ReviewStatsInputs) => void;\n}\n\nconst Inputs: FunctionComponent<WithStyles<typeof styles> & InputsProps> = ({\n  classes,\n  onQuery,\n}) => {\n  const [repository, setRepository] = useState('Facebook/react');\n  const onRepositoryInputChange: NonNullable<TextFieldProps['onChange']> = (\n    event,\n  ) => {\n    setRepository(event.target.value);\n  };\n\n  const [fromDate, setFromDate] = useState(subDays(new Date(), 7));\n  const [toDate, setToDate] = useState(new Date());\n  const onQueryButtonClick = useCallback(\n    () =>\n      onQuery({\n        repository,\n        fromDate,\n        toDate,\n      }),\n    [onQuery, repository, fromDate, toDate],\n  );\n\n  return (\n    <>\n      <TextField\n        label=\"Repository\"\n        value={repository}\n        onChange={onRepositoryInputChange}\n        className={classes.input}\n        fullWidth={true}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              https://github.com/\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <div>\n        <DateTimePicker\n          value={fromDate}\n          onChange={setFromDate}\n          label=\"From\"\n          disableFuture={true}\n          className={classes.input}\n        />\n        <DateTimePicker\n          value={toDate}\n          onChange={setToDate}\n          label=\"To\"\n          disableFuture={true}\n          className={`${classes.input} ${classes.withMarginLeft}`}\n        />\n      </div>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={onQueryButtonClick}>\n        Query\n      </Button>\n    </>\n  );\n};\n\nconst StyledInputs = withStyles(styles)(Inputs);\nexport { StyledInputs as Inputs };\n","export const colorPalette = [\n  '#52489C',\n  '#4062BB',\n  '#59C3C3',\n  '#535e79',\n  '#F45B69',\n];\n","import { StyleRulesCallback, withStyles, WithStyles } from '@material-ui/core';\nimport React, { FunctionComponent } from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nimport { colorPalette } from './color-palette';\nimport { TransformedReview } from './interfaces';\n\nconst styles: StyleRulesCallback<'chartsWrapper'> = (_) => ({\n  chartsWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n});\n\nconst BARS_LIMIT = 10;\n\ninterface ChartsOwnProps {\n  reviews: TransformedReview[];\n}\n\nconst Charts: FunctionComponent<WithStyles<typeof styles> & ChartsOwnProps> = ({\n  classes,\n  reviews,\n}) => {\n  return (\n    <div className={classes.chartsWrapper}>\n      <ResponsiveContainer width=\"80%\" aspect={1}>\n        <PieChart>\n          <Pie\n            data={reviews}\n            nameKey=\"name\"\n            dataKey=\"count\"\n            label={true}\n            labelLine={true}\n          >\n            {reviews.map((_, index) => (\n              <Cell\n                fill={colorPalette[index % colorPalette.length]}\n                key={index}\n              />\n            ))}\n          </Pie>\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n      <ResponsiveContainer width=\"100%\" aspect={2}>\n        <BarChart data={reviews.slice(0, BARS_LIMIT)}>\n          <CartesianGrid />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Bar dataKey=\"count\" fill={colorPalette[0]} />\n          <Tooltip />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nconst StyledCharts = withStyles(styles)(Charts);\nexport { StyledCharts as Charts };\n","import { filesReviewedReviewMetric } from './files-reviewed';\nimport { linesOfCodeReviewedReviewMetric } from './lines-of-code-reviewed';\nimport { prsInteractedWithReviewMetric } from './prs-interacted-with';\nimport { totalCommentsReviewMetric } from './total-comments';\nimport { ReviewMetric } from './types';\n\nexport type MetricKind =\n  | 'totalComments'\n  | 'prsInteractedWith'\n  | 'linesOfCodeReviewed'\n  | 'filesReviewed';\n\nexport const metrics: Record<MetricKind, ReviewMetric> = {\n  totalComments: totalCommentsReviewMetric,\n  prsInteractedWith: prsInteractedWithReviewMetric,\n  linesOfCodeReviewed: linesOfCodeReviewedReviewMetric,\n  filesReviewed: filesReviewedReviewMetric,\n};\n","import { ReviewMetric } from './types';\n\nexport const totalCommentsReviewMetric: ReviewMetric = (pullRequests) => {\n  const reviewsMap: Record<string, number> = {};\n\n  pullRequests.forEach((pr) => {\n    pr.reviews.nodes\n      .filter((review) => review.author.login !== pr.author.login)\n      .forEach((review) => {\n        reviewsMap[review.author.login] =\n          (reviewsMap[review.author.login] || 0) + review.comments.totalCount;\n      });\n  });\n\n  return reviewsMap;\n};\n","import { ReviewMetric } from './types';\n\nexport const prsInteractedWithReviewMetric: ReviewMetric = (pullRequests) => {\n  const reviewsMap: Record<string, number> = {};\n\n  pullRequests.forEach((pr) => {\n    const involvedUsers = new Set<string>();\n\n    pr.reviews.nodes.forEach((review) => {\n      involvedUsers.add(review.author.login);\n    });\n\n    involvedUsers.delete(pr.author.login);\n\n    involvedUsers.forEach((user) => {\n      reviewsMap[user] = (reviewsMap[user] || 0) + 1;\n    });\n  });\n\n  return reviewsMap;\n};\n","import { ReviewMetric } from './types';\n\nexport const linesOfCodeReviewedReviewMetric: ReviewMetric = (pullRequests) => {\n  const reviewsMap: Record<string, number> = {};\n\n  pullRequests.forEach((pr) => {\n    const involvedUsers = new Set<string>();\n\n    pr.reviews.nodes.forEach((review) => {\n      involvedUsers.add(review.author.login);\n    });\n\n    involvedUsers.delete(pr.author.login);\n\n    involvedUsers.forEach((user) => {\n      reviewsMap[user] = (reviewsMap[user] || 0) + pr.additions + pr.deletions;\n    });\n  });\n\n  return reviewsMap;\n};\n","import { ReviewMetric } from './types';\n\nexport const filesReviewedReviewMetric: ReviewMetric = (pullRequests) => {\n  const reviewsMap: Record<string, number> = {};\n\n  pullRequests.forEach((pr) => {\n    const involvedUsers = new Set<string>();\n\n    pr.reviews.nodes.forEach((review) => {\n      involvedUsers.add(review.author.login);\n    });\n\n    involvedUsers.delete(pr.author.login);\n\n    involvedUsers.forEach((user) => {\n      reviewsMap[user] = (reviewsMap[user] || 0) + pr.changedFiles;\n    });\n  });\n\n  return reviewsMap;\n};\n","import { FormControl, InputLabel, MenuItem } from '@material-ui/core';\nimport Select, { SelectProps } from '@material-ui/core/Select';\nimport React, {\n  FunctionComponent,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { Charts } from './charts';\nimport { PullRequest } from './interfaces';\nimport { MetricKind, metrics } from './metrics';\nimport { transformPullRequests } from './transform-pull-requests';\n\nexport const MetricPickerWithCharts: FunctionComponent<{\n  pullRequests: PullRequest[];\n}> = ({ pullRequests }) => {\n  const [metricKind, setMetricKind] = useState('totalComments' as MetricKind);\n  const reviews = useMemo(\n    () => transformPullRequests(pullRequests, metrics[metricKind]),\n    [metricKind, pullRequests],\n  );\n\n  const onMetricSelectChange = useCallback<\n    NonNullable<SelectProps['onChange']>\n  >(\n    (event) => {\n      setMetricKind(event.target.value as MetricKind);\n    },\n    [setMetricKind],\n  );\n\n  return (\n    <>\n      <FormControl style={{ marginTop: 10 }}>\n        <InputLabel htmlFor=\"metric\">Metric</InputLabel>\n        <Select\n          value={metricKind}\n          onChange={onMetricSelectChange}\n          inputProps={{ name: 'metric', id: 'metric' }}\n        >\n          <MenuItem value={'totalComments' as MetricKind}>\n            Total comments\n          </MenuItem>\n          <MenuItem value={'prsInteractedWith' as MetricKind}>\n            PRs interacted with\n          </MenuItem>\n          <MenuItem value={'linesOfCodeReviewed' as MetricKind}>\n            Lines of code reviewed\n          </MenuItem>\n          <MenuItem value={'filesReviewed' as MetricKind}>\n            Files reviewed\n          </MenuItem>\n        </Select>\n      </FormControl>\n\n      <Charts reviews={reviews} />\n    </>\n  );\n};\n","import { PullRequest, TransformedReview } from './interfaces';\nimport { ReviewMetric } from './metrics/types';\n\nexport const transformPullRequests = (\n  pullRequests: PullRequest[],\n  reviewMetric: ReviewMetric,\n): TransformedReview[] => {\n  const reviewsMap = reviewMetric(pullRequests);\n\n  const reviews = Object.entries(reviewsMap).map(\n    ([name, count]): TransformedReview => ({\n      name,\n      count,\n    }),\n  );\n  reviews.sort((a, b) => b.count - a.count);\n\n  return reviews;\n};\n","import { CircularProgress } from '@material-ui/core';\nimport { format } from 'date-fns/esm';\nimport gql from 'graphql-tag';\nimport React, { FunctionComponent } from 'react';\nimport { Query } from 'react-apollo';\n\nimport { ReviewStatsInputs } from './interfaces';\nimport { MetricPickerWithCharts } from './metric-picker-with-charts';\n\nconst GET_REPOSITORY_INFO_QUERY = gql`\n  query GetRepositoryInfo(\n    $firstPrs: Int!\n    $firstReviews: Int!\n    $query: String!\n  ) {\n    search(first: $firstPrs, type: ISSUE, query: $query) {\n      nodes {\n        ... on PullRequest {\n          number\n          permalink\n          title\n          updatedAt\n          changedFiles\n          additions\n          deletions\n          author {\n            login\n          }\n          reviews(first: $firstReviews) {\n            nodes {\n              author {\n                login\n              }\n              comments {\n                totalCount\n              }\n              publishedAt\n              state\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface QueryRepositoryProps {\n  queryData: ReviewStatsInputs;\n}\n\nexport const QueryRepository: FunctionComponent<QueryRepositoryProps> = ({\n  queryData,\n}) => {\n  const queryVariables = {\n    firstPrs: 100,\n    firstReviews: 100,\n    query: createSearchQueryString(queryData),\n  };\n\n  return (\n    <div>\n      <Query query={GET_REPOSITORY_INFO_QUERY} variables={queryVariables}>\n        {({ loading, error, data }) => {\n          if (loading) {\n            return <CircularProgress />;\n          }\n          if (error) {\n            console.error('Error while fetching the query', error);\n            return 'Error!';\n          }\n\n          return <MetricPickerWithCharts pullRequests={data.search.nodes} />;\n        }}\n      </Query>\n    </div>\n  );\n};\n\nconst formatGitHubDateTime = (date: Date) =>\n  [format(date, 'yyyy-MM-dd'), 'T', format(date, 'HH:mm:ss'), 'Z'].join('');\n\nconst createSearchQueryString = (queryData: ReviewStatsInputs) =>\n  `type:pr repo:${queryData.repository} updated:${formatGitHubDateTime(\n    queryData.fromDate,\n  )}..${formatGitHubDateTime(queryData.toDate)} sort:updated-desc`;\n","import {\n  Paper,\n  StyleRulesCallback,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport React, { FunctionComponent, useState } from 'react';\n\nimport { Inputs } from './inputs';\nimport { ReviewStatsInputs } from './interfaces';\nimport { QueryRepository } from './query-repository';\n\nconst styles: StyleRulesCallback<'main' | 'input' | 'withMarginLeft'> = (\n  theme,\n) => ({\n  main: {\n    width: 'auto',\n    display: 'block',\n\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit,\n\n    padding: theme.spacing.unit * 2,\n\n    [theme.breakpoints.up('lg')]: {\n      width: theme.breakpoints.width('lg') - theme.spacing.unit * 2 * 2,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  input: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n  withMarginLeft: {\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nconst ReviewStats: FunctionComponent<WithStyles<typeof styles>> = ({\n  classes,\n}) => {\n  const [queryData, setQueryData] = useState<ReviewStatsInputs | null>(null);\n\n  return (\n    <Paper className={classes.main}>\n      <Inputs onQuery={setQueryData} />\n\n      {queryData && <QueryRepository queryData={queryData} />}\n    </Paper>\n  );\n};\n\nconst StyledReviewStats = withStyles(styles)(ReviewStats);\nexport { StyledReviewStats as ReviewStats };\n","import { combineReducers, createStore } from 'redux';\n\nimport { AuthenticationAction } from './authentication/actions';\nimport { AuthenticationState } from './authentication/interfaces';\nimport { authenticationReducerFactory } from './authentication/reducer';\n\nexport interface StoreState {\n  authentication: AuthenticationState;\n}\n\nexport type StoreAction = AuthenticationAction;\n\nconst reducer = combineReducers<StoreState, StoreAction>({\n  authentication: authenticationReducerFactory(localStorage),\n});\n\nexport const store = createStore(\n  reducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","import { Reducer } from 'redux';\n\nimport { AuthenticationAction } from './actions';\nimport { AuthenticationState } from './interfaces';\n\nconst ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\n\nexport const authenticationReducerFactory = (\n  storage: Storage,\n): Reducer<AuthenticationState, AuthenticationAction> => {\n  const defaultState: AuthenticationState = {\n    accessToken: storage.getItem(ACCESS_TOKEN_STORAGE_KEY) || undefined,\n    isLoading: false,\n    hasError: false,\n    login: undefined,\n  };\n\n  return (state = defaultState, action): AuthenticationState => {\n    switch (action.type) {\n      case 'AUTHENTICATION_SUCCESS':\n        storage.setItem(ACCESS_TOKEN_STORAGE_KEY, action.accessToken);\n\n        return {\n          ...state,\n          accessToken: action.accessToken,\n          isLoading: false,\n        };\n\n      case 'AUTHENTICATION_ERROR':\n        return {\n          ...state,\n          isLoading: false,\n          hasError: true,\n        };\n\n      case 'AUTHENTICATION_STARTED':\n        return {\n          ...state,\n          isLoading: true,\n          hasError: false,\n        };\n\n      case 'AUTHENTICATION_LOGOUT':\n        storage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\n\n        return {\n          ...state,\n          isLoading: false,\n          hasError: false,\n          accessToken: undefined,\n          login: undefined,\n        };\n\n      case 'AUTHENTICATION_LOGIN':\n        return {\n          ...state,\n          login: action.login,\n        };\n\n      default:\n        return state;\n    }\n  };\n};\n","export const getUserProfileUrl = (login: string) =>\n  `https://github.com/${login}`;\n","import {\n  Button,\n  Grid,\n  Link,\n  Paper,\n  StyleRulesCallback,\n  Typography,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport React, { FunctionComponent, useCallback } from 'react';\nimport { connect, DispatchProp, MapStateToProps } from 'react-redux';\n\nimport { AppTitle } from '../app-title';\nimport { authenticationLogout } from '../authentication/actions';\nimport { StoreState } from '../store';\nimport { getUserProfileUrl } from './get-user-profile-url';\n\ninterface StateProps {\n  login?: string;\n}\n\nconst styles: StyleRulesCallback<'main' | 'signOutButton'> = (theme) => ({\n  main: {\n    width: 'auto',\n\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit,\n    padding: theme.spacing.unit,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  signOutButton: {\n    textAlign: 'right',\n  },\n});\n\nconst UserInfoBar: FunctionComponent<\n  StateProps & DispatchProp & WithStyles<typeof styles>\n> = ({ login, dispatch, classes }) => {\n  if (!login) {\n    throw new Error('Login is required');\n  }\n\n  const signOut = useCallback(() => {\n    dispatch(authenticationLogout());\n  }, [dispatch]);\n\n  return (\n    <Paper className={classes.main}>\n      <AppTitle />\n\n      <Grid container={true} alignItems=\"center\">\n        <Grid item={true} xs={8}>\n          <Typography>\n            Signed in as{' '}\n            <Link href={getUserProfileUrl(login)}>\n              <strong>{login}</strong>\n            </Link>\n          </Typography>\n        </Grid>\n\n        <Grid item={true} xs={4} className={classes.signOutButton}>\n          <Button onClick={signOut} variant=\"contained\">\n            Sign out\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, StoreState> = ({\n  authentication,\n}) => ({\n  login: authentication.login,\n});\n\nconst ConnectedUserInfoBar = connect(mapStateToProps)(\n  withStyles(styles)(UserInfoBar),\n);\n\nexport { ConnectedUserInfoBar as UserInfoBar };\n","import DateFnsUtils from '@date-io/date-fns';\nimport { CssBaseline } from '@material-ui/core';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport React, { Component } from 'react';\nimport { Provider as StoreProvider } from 'react-redux';\n\nimport { ApolloSetup } from './apollo/apollo-setup';\nimport { AuthChecker } from './authentication/auth-checker';\nimport { ReviewStats } from './review-stats/review-stats';\nimport { store } from './store';\nimport { UserInfoBar } from './user-info-bar/user-info-bar';\n\nclass App extends Component {\n  public render() {\n    return (\n      <>\n        <CssBaseline />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <StoreProvider store={store}>\n            <AuthChecker>\n              <ApolloSetup>\n                <UserInfoBar />\n\n                <ReviewStats />\n              </ApolloSetup>\n            </AuthChecker>\n          </StoreProvider>\n        </MuiPickersUtilsProvider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString(),\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\nregisterServiceWorker();\n"],"sourceRoot":""}